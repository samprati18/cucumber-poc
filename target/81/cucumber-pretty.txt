Feature: Customer Login - Happy Path
  Purpose of this API is to validate the customer id and password.
  And return the success/invalid message  based on the validation on customer id and password

  Scenario Outline: Valid customer id and password  and response contains the success message # 01_CustomerLogin.feature:6
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8027/ikano/customerLogin"

    Given the customerLogin requests "CustomerLoginRequest"
    When Customer provide user name as <customerID> and password as <PASSWORD>
    Then Customer should get valid response from the API

    Examples: 

  Scenario Outline: Valid customer id and password  and response contains the success message # 01_CustomerLogin.feature:22
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8027/ikano/customerLogin"

    Given the customerLogin requests "CustomerLoginRequest"                                   # CustomerLoginStepDefinitions.existing_customer_login_into_module(String)
    When Customer provide user name as 925903 and password as password                        # CustomerLoginStepDefinitions.customer_is_providing_userName_and_password(String,String)
    Then Customer should get valid response from the API                                      # CustomerLoginStepDefinitions.verify_valid_response()
Feature: Customer Login - Negative Scenario
  Purpose of this API is to validate the customer id and password.
  And return the invalid message  based on the validation on customer id and password

  Scenario Outline: Invalid customer id and password  and response contains the success message # 02_CustomerLoginNegScenario.feature:6
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8027/ikano/customerLogin"

    Given the customer is requesting  "CustomerLoginRequest"
    When customer provide invalid user name as <customerID> and password as <PASSWORD>
    Then customer should get invalid credentials  response from the API

    Examples: 

  Scenario Outline: Invalid customer id and password  and response contains the success message # 02_CustomerLoginNegScenario.feature:22
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8027/ikano/customerLogin"

    Given the customer is requesting  "CustomerLoginRequest"                                    # CustomerLoginNegativeScenarioStepDefinitions.existing_customer_login_into_module(String)
    When customer provide invalid user name as 925903 and password as password1234              # CustomerLoginNegativeScenarioStepDefinitions.customer_is_providing_userName_and_password(String,String)
    Then customer should get invalid credentials  response from the API                         # CustomerLoginNegativeScenarioStepDefinitions.verify_valid_response()
Feature: GetCustomerInfo - Happy Path scenarios
  Purpose of this API is to fetch the customer details from SAAS/Master Data.
  And return the success/invalid message  based on the validation on customerId

  Scenario Outline: Valid customer id  and response contains the success message # 03_GetCustomerDetails.feature:6
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.24.154:8085/ikano/srh"

    # and "CustomerLoginURL" - You need to make function which will read the this string and config/properties file have key value pair which will hold the API #end   points
    Given the customerLogin is requesting for "GetCustomerDetails"
    When Customer provide customerId as <customerNumber>
    Then Customer should get response from the API

    Examples: 

  Scenario Outline: Valid customer id  and response contains the success message # 03_GetCustomerDetails.feature:22
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.24.154:8085/ikano/srh"

    # and "CustomerLoginURL" - You need to make function which will read the this string and config/properties file have key value pair which will hold the API #end   points
    Given the customerLogin is requesting for "GetCustomerDetails"               # GetCustomerInfoStepDefinitions.existing_customer_requests_for_accountId(String)
    When Customer provide customerId as 109106047                                # GetCustomerInfoStepDefinitions.customer_is_providing_customerId(String)
    Then Customer should get response from the API                               # GetCustomerInfoStepDefinitions.verify_response()
Feature: GenerateQRCode - Happy Path scenarios
  Purpose of this API is to generate QR Code for customer.
  And return the success/invalid message  based on the validation on customerId and amount

  Scenario Outline: Valid customer id and amount and response contains the success message # 04_GenerateQRCode.feature:6
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8086/ikano/generateQRCode"

    Given the customer  is executing  "GenerateQRCode"
    When Customer enters customerId <customerId> and amount as <amount>
    Then Customer should receive qr code from api

    Examples: 

  Scenario Outline: Valid customer id and amount and response contains the success message # 04_GenerateQRCode.feature:22
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8086/ikano/generateQRCode"

    Given the customer  is executing  "GenerateQRCode"                                     # GenerateQRCodeStepDefinitions.the_customer_is_executing_qr_code(String)
    When Customer enters customerId 925903 and amount as 12344                             # GenerateQRCodeStepDefinitions.customer_enters_customerId_and_amount(String,String)
    Then Customer should receive qr code from api                                          # GenerateQRCodeStepDefinitions.customer_should_receive_qr_code_from_api()
Feature: ReadQRCode - Happy Path scenarios
  Purpose of this API is to read QR Code for customer.
  And return the success/invalid message

  Scenario Outline: Merchant will read the qr code # 05_ReadQRCode.feature:6
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8086/ikano/readQRCode"

    Given the merchant will execute  "ReadQRCode"
    When merchant  enter details
    Then merchant should read qr code from api

    Examples: 

  Scenario Outline: Merchant will read the qr code # 05_ReadQRCode.feature:21
    
    Preconditions for testing the scenario:
    1. The customer exists in DB.
    2. Rest API is deployed and up and running on server "http://3.124.99.106:8086/ikano/readQRCode"

    Given the merchant will execute  "ReadQRCode"  # ReadQRCodeStepDefinitions.the_merchant_will_execute(String)
    When merchant  enter details                   # ReadQRCodeStepDefinitions.merchant_enter_details()
    Then merchant should read qr code from api     # ReadQRCodeStepDefinitions.merchant_should_read_qr_code_from_api()
